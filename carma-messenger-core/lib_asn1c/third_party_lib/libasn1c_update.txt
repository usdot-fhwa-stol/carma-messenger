# Navigate to directory where asn1c github repository will be cloned, and run the following commands:
sudo apt install automake libtool bison flex g++-multilib
git clone https://github.com/mouse07410/asn1c
cd asn1c
git checkout ebed802c88b3049cfe67326e4df780cefc6da49e
test -f configure || autoreconf -iv
sudo ./configure
sudo make
sudo make install

# Create a workspace with the following structue:
Note: Workspace in this context is a temporary folder ouside the Carma code tree for creating the third party shared library.

Workspace
  |
  ------include
  |
  ------src
  
Navigate into this workspace and run the following commands:

To generate code for the usage of our platform, run:

asn1c -pdu=MessageFrame -fcompound-names -no-gen-APER -no-gen-JER ***.asn
Note: All generated header files from asn1c and the JNI header files should be moved to the include folder.
Note: All generated source files from asn1c(except for converter-sample.c) and the wrapper.c should be moved to the src folder.

To generate the x64 shared library, run:

gcc -DPDU=MessageFrame -shared -o libasn1c_x64.so -I./include/ ./src/*.c -fPIC

To generate the x86 shared library, run:

gcc -m32 -DPDU=MessageFrame -shared -o libasn1c_x86.so -I./include/ ./src/*.c -fPIC

Note: In order to use m32 flag, you should have the package libc6-dev-i386 ready.

Copy the new generated shared libraries in your Workspace.

Paste and replace the old libraries in this folder.

## To build on ARM, follow the same instructions but for the final build only run: 

gcc -DPDU=MessageFrame -shared -o libasn1c_arm64.so -I./include/ ./src/*.c -fPIC